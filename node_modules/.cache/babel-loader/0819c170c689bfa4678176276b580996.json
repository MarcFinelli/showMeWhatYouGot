{"ast":null,"code":"var _jsxFileName = \"/Users/marcfinelli/GemHunter/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport GemSymbol from \"./Gem.png\";\nimport useInterval from \"./interval\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst canvasX = 1000;\nconst canvasY = 1000;\nconst initialDragon = [[5, 10], [5, 10]];\nconst initialGem = [14, 10];\nconst scale = 50;\nconst timeDelay = 100;\n\nfunction App() {\n  _s();\n\n  const canvasRef = useRef(null);\n  const [dragon, setDragon] = useState(initialDragon);\n  const [gem, setGem] = useState(initialGem);\n  const [direction, setDirection] = useState([0, -1]);\n  const [delay, setDelay] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  useInterval(() => runGame(), delay);\n  useEffect(() => {\n    let Gem = document.getElementById(\"gem\");\n\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext(\"2d\");\n\n      if (ctx) {\n        ctx.setTransform(scale, 0, 0, scale, 0, 0);\n        ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\n        ctx.fillStyle = \"#18d907\";\n        dragon.forEach(_ref => {\n          let [x, y] = _ref;\n          return ctx.fillRect(x, y, 1, 1);\n        });\n        ctx.drawImage(Gem, gem[0], gem[1], 1, 1);\n      }\n    }\n  }, [dragon, gem, gameOver]);\n\n  function handleSetScore() {\n    if (score > Number(localStorage.getItem(\"gemScore\"))) {\n      localStorage.setItem(\"gemScore\", JSON.stringify(score));\n    }\n  }\n\n  function play() {\n    setDragon(initialDragon);\n    setGem(initialGem);\n    setDirection([1, 0]);\n    setDelay(timeDelay);\n    setScore(0);\n    setGameOver(false);\n  }\n\n  function checkCollision(head) {\n    for (let i = 0; i < head.length; i++) {\n      if (head[i] < 0 || head[i] * scale >= canvasX) return true;\n    }\n\n    for (const s of dragon) {\n      if (head[0] === s[0] && head[1] === s[1]) return true;\n    }\n\n    return false;\n  }\n\n  function gemGet(newDragon) {\n    let coord = gem.map(() => Math.floor(Math.random() * canvasX / scale));\n\n    if (newDragon[0][0] === gem[0] && newDragon[0][1] === gem[1]) {\n      let newGem = coord;\n      setScore(score + 1);\n      setGem(newGem);\n      return true;\n    }\n\n    return false;\n  }\n\n  function runGame() {\n    const newDragon = [...dragon];\n    const newDragonPiece = [newDragon[0][0] + direction[0], newDragon[0][1] + direction[1]];\n    newDragon.unshift(newDragonPiece);\n\n    if (checkCollision(newDragonPiece)) {\n      setDelay(null);\n      setGameOver(true);\n      handleSetScore();\n    }\n\n    if (!gemGet(newDragon)) {\n      newDragon.pop();\n    }\n\n    setDragon(newDragon);\n  }\n\n  function changeDirection(e) {\n    switch (e.key) {\n      case \"a\":\n        setDirection([-1, 0]);\n        break;\n\n      case \"w\":\n        setDirection([0, -1]);\n        break;\n\n      case \"d\":\n        setDirection([1, 0]);\n        break;\n\n      case \"s\":\n        setDirection([0, 1]);\n        break;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onKeyDown: e => changeDirection(e),\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"gem\",\n      src: GemSymbol,\n      alt: \"gem\",\n      width: \"30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      className: \"playArea\",\n      ref: canvasRef,\n      width: `${canvasX}px`,\n      height: `${canvasY}px`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 4\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameOver\",\n      children: \"Game Over\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: play,\n      className: \"playButton\",\n      children: \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scoreBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"High Score: \", localStorage.getItem(\"gemScore\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"oh30Tx7AHukSx4ZKir1rXzY/Heo=\", false, function () {\n  return [useInterval];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/marcfinelli/GemHunter/src/App.tsx"],"names":["React","useEffect","useRef","useState","GemSymbol","useInterval","canvasX","canvasY","initialDragon","initialGem","scale","timeDelay","App","canvasRef","dragon","setDragon","gem","setGem","direction","setDirection","delay","setDelay","gameOver","setGameOver","score","setScore","runGame","Gem","document","getElementById","current","canvas","ctx","getContext","setTransform","clearRect","window","innerWidth","innerHeight","fillStyle","forEach","x","y","fillRect","drawImage","handleSetScore","Number","localStorage","getItem","setItem","JSON","stringify","play","checkCollision","head","i","length","s","gemGet","newDragon","coord","map","Math","floor","random","newGem","newDragonPiece","unshift","pop","changeDirection","e","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\"\nimport \"./App.css\"\nimport GemSymbol from \"./Gem.png\"\nimport useInterval from \"./interval\"\n\nconst canvasX = 1000\nconst canvasY = 1000\nconst initialDragon = [ [ 5, 10 ], [ 5, 10 ] ]\nconst initialGem = [ 14, 10 ]\nconst scale = 50\nconst timeDelay = 100\n\nfunction App() {\n\tconst canvasRef = useRef<HTMLCanvasElement | null>(null)\n\tconst [ dragon, setDragon ] = useState(initialDragon)\n\tconst [ gem, setGem ] = useState(initialGem)\n\tconst [ direction, setDirection ] = useState([ 0, -1 ])\n\tconst [ delay, setDelay ] = useState<number | null>(null)\n\tconst [ gameOver, setGameOver ] = useState(false)\n\tconst [ score, setScore ] = useState(0)\n\n\tuseInterval(() => runGame(), delay)\n\n\tuseEffect(\n\t\t() => {\n\t\t\tlet Gem = document.getElementById(\"gem\") as HTMLCanvasElement\n\t\t\tif (canvasRef.current) {\n\t\t\t\tconst canvas = canvasRef.current\n\t\t\t\tconst ctx = canvas.getContext(\"2d\")\n\t\t\t\tif (ctx) {\n\t\t\t\t\tctx.setTransform(scale, 0, 0, scale, 0, 0)\n\t\t\t\t\tctx.clearRect(0, 0, window.innerWidth, window.innerHeight)\n\t\t\t\t\tctx.fillStyle = \"#18d907\"\n\t\t\t\t\tdragon.forEach(([ x, y ]) => ctx.fillRect(x, y, 1, 1))\n\t\t\t\t\tctx.drawImage(Gem, gem[0], gem[1], 1, 1)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[ dragon, gem, gameOver ]\n\t)\n\n\tfunction handleSetScore() {\n\t\tif (score > Number(localStorage.getItem(\"gemScore\"))) {\n\t\t\tlocalStorage.setItem(\"gemScore\", JSON.stringify(score))\n\t\t}\n\t}\n\n\tfunction play() {\n\t\tsetDragon(initialDragon)\n\t\tsetGem(initialGem)\n\t\tsetDirection([ 1, 0 ])\n\t\tsetDelay(timeDelay)\n\t\tsetScore(0)\n\t\tsetGameOver(false)\n\t}\n\n\tfunction checkCollision(head: number[]) {\n\t\tfor (let i = 0; i < head.length; i++) {\n\t\t\tif (head[i] < 0 || head[i] * scale >= canvasX) return true\n\t\t}\n\t\tfor (const s of dragon) {\n\t\t\tif (head[0] === s[0] && head[1] === s[1]) return true\n\t\t}\n\t\treturn false\n\t}\n\n\tfunction gemGet(newDragon: number[][]) {\n\t\tlet coord = gem.map(() => Math.floor(Math.random() * canvasX / scale))\n\t\tif (newDragon[0][0] === gem[0] && newDragon[0][1] === gem[1]) {\n\t\t\tlet newGem = coord\n\t\t\tsetScore(score + 1)\n\t\t\tsetGem(newGem)\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\n\tfunction runGame() {\n\t\tconst newDragon = [ ...dragon ]\n\t\tconst newDragonPiece = [ newDragon[0][0] + direction[0], newDragon[0][1] + direction[1] ]\n\t\tnewDragon.unshift(newDragonPiece)\n\t\tif (checkCollision(newDragonPiece)) {\n\t\t\tsetDelay(null)\n\t\t\tsetGameOver(true)\n\t\t\thandleSetScore()\n\t\t}\n\t\tif (!gemGet(newDragon)) {\n\t\t\tnewDragon.pop()\n\t\t}\n\t\tsetDragon(newDragon)\n\t}\n\n\tfunction changeDirection(e: React.KeyboardEvent<HTMLDivElement>) {\n\t\tswitch (e.key) {\n\t\t\tcase \"a\":\n\t\t\t\tsetDirection([ -1, 0 ])\n\t\t\t\tbreak\n\t\t\tcase \"w\":\n\t\t\t\tsetDirection([ 0, -1 ])\n\t\t\t\tbreak\n\t\t\tcase \"d\":\n\t\t\t\tsetDirection([ 1, 0 ])\n\t\t\t\tbreak\n\t\t\tcase \"s\":\n\t\t\t\tsetDirection([ 0, 1 ])\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\treturn (\n\t\t<div onKeyDown={(e) => changeDirection(e)}>\n\t\t\t<img id=\"gem\" src={GemSymbol} alt=\"gem\" width=\"30\" />\n\t\t\t<canvas className=\"playArea\" ref={canvasRef} width={`${canvasX}px`} height={`${canvasY}px`} />\n\t\t\t{gameOver && <div className=\"gameOver\">Game Over</div>}\n\t\t\t<button onClick={play} className=\"playButton\">\n\t\t\t\tPlay\n\t\t\t</button>\n\t\t\t<div className=\"scoreBox\">\n\t\t\t\t<h2>Score: {score}</h2>\n\t\t\t\t<h2>High Score: {localStorage.getItem(\"gemScore\")}</h2>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}